name: SonarQube Cloud
on:
 push:
   branches: [ main ]
 pull_request:
   types: [opened, synchronize, reopened]

jobs:
 build:
   name: Build and analyze
   runs-on: windows-latest
   
   steps:
     - uses: actions/setup-java@v4
       with:
         java-version: 17
         distribution: 'zulu'
         
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
         
     - uses: actions/cache@v4
       with:
         path: ~\sonar\cache
         key: ${{ runner.os }}-sonar
         restore-keys: ${{ runner.os }}-sonar
         
     - uses: actions/cache@v4
       id: cache-sonar-scanner
       with:
         path: .\.sonar\scanner
         key: ${{ runner.os }}-sonar-scanner
         restore-keys: ${{ runner.os }}-sonar-scanner
         
     - if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
       shell: powershell
       run: |
         New-Item -Path .\.sonar\scanner -ItemType Directory
         dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
         
     - name: Build and analyze
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       shell: powershell
       run: |
         .\.sonar\scanner\dotnet-sonarscanner begin /k:"pdftest_pdftest2" /o:"pdftest" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.sources="./Proyecto_PDF/NegocioPDF,./Proyecto_PDF/PROYECTOPDF" /d:sonar.tests="./Proyecto_PDF/NegocioPDF.TESTS" /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.js,**/*.css" /d:sonar.test.inclusions="**/*Tests.cs,**/*Test.cs,**/*.feature" /d:sonar.cs.vscoveragexml.reportsPaths=**/TestResults/**/coverage.cobertura.xml
         dotnet build proyecto_PDF/proyectoPDF.sln
         dotnet test --collect:"XPlat Code Coverage"
         .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
