name: Mutation Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  mutation-testing:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Install Stryker
      run: dotnet tool install -g dotnet-stryker
        
    - name: Restore dependencies
      run: |
        cd PROYECTO_PDF
        dotnet restore
        
    - name: Build
      run: |
        cd PROYECTO_PDF
        dotnet build --no-restore
        
    - name: Run mutation tests
      run: |
        cd PROYECTO_PDF/NegocioPDF.Tests
        dotnet stryker
        
    - name: Debug - List StrykerOutput contents
      run: |
        echo "Listing StrykerOutput directory contents:"
        ls -R PROYECTO_PDF/NegocioPDF.Tests/StrykerOutput/
        
    - name: Upload mutation report artifact
      uses: actions/upload-artifact@v3
      with:
        name: mutation-report
        path: PROYECTO_PDF/NegocioPDF.Tests/StrykerOutput/
        if-no-files-found: error

  deploy-report:
    needs: mutation-testing
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Download mutation report
      uses: actions/download-artifact@v3
      with:
        name: mutation-report
        path: public

    - name: Debug - List downloaded contents
      run: |
        echo "Listing public directory contents:"
        ls -R public/
        
    - name: Find and check mutation report
      run: |
        REPORT_PATH=$(find public -name "mutation-report.json" -type f)
        if [ -n "$REPORT_PATH" ]; then
          echo "Found report at: $REPORT_PATH"
          MUTATION_SCORE=$(jq '.mutationScore' "$REPORT_PATH")
          echo "Current mutation score: $MUTATION_SCORE%"
          
          MINIMUM_SCORE=80
          echo "Required minimum score: $MINIMUM_SCORE%"
          
          if (( $(echo "$MUTATION_SCORE < $MINIMUM_SCORE" | bc -l) )); then
            echo "❌ Error: Mutation score ($MUTATION_SCORE%) is below the required minimum ($MINIMUM_SCORE%)"
            exit 1
          else
            echo "✅ Success: Mutation score ($MUTATION_SCORE%) meets the requirement"
          fi
        else
          echo "❌ Error: Mutation report not found in downloaded artifacts"
          find public -type f
          exit 1
        fi

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
