name: Generate Test Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
        cd NegocioPDF
        dotnet restore

    - name: Build
      run: |
        cd NegocioPDF
        dotnet build --no-restore

    - name: Install tools
      run: |
        dotnet tool install -g dotnet-stryker
        dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Run Tests with Coverage
      run: |
        cd NegocioPDF
        dotnet test --collect:"XPlat Code Coverage"

    - name: Generate Coverage Report
      run: |
        cd NegocioPDF
        reportgenerator "-reports:NegocioPDF.Tests/TestResults/**/coverage.cobertura.xml" "-targetdir:coverage-report" -reporttypes:Html

    - name: Run Stryker
      run: |
        cd NegocioPDF
        dotnet stryker -o

    - name: Prepare Reports
      run: |
        mkdir -p public
        
        # Copy coverage report if it exists
        if [ -d "NegocioPDF/coverage-report" ]; then
          echo "Copying coverage report..."
          cp -r NegocioPDF/coverage-report public/coverage
        fi
        
        # Find and copy the most recent Stryker report
        STRYKER_REPORT=$(find NegocioPDF/StrykerOutput -name "mutation-report.html" -type f | sort -r | head -n1)
        if [ -n "$STRYKER_REPORT" ]; then
          echo "Found Stryker report at: $STRYKER_REPORT"
          REPORT_DIR=$(dirname "$STRYKER_REPORT")
          mkdir -p public/mutation
          cp -r "$REPORT_DIR"/* public/mutation/
        fi
        
        # Create index page
        cat > public/index.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Reports - NegocioPDF Project</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    margin: 40px;
                    line-height: 1.6;
                    background-color: #f5f5f5;
                }
                .container {
                    max-width: 800px;
                    margin: 0 auto;
                    background-color: white;
                    padding: 20px;
                    border-radius: 8px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                }
                h1 {
                    color: #333;
                    border-bottom: 2px solid #eee;
                    padding-bottom: 10px;
                }
                .report-link {
                    display: block;
                    margin: 20px 0;
                    padding: 15px;
                    background-color: #f8f9fa;
                    border: 1px solid #ddd;
                    border-radius: 4px;
                    color: #333;
                    text-decoration: none;
                }
                .report-link:hover {
                    background-color: #e9ecef;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>NegocioPDF Project Test Reports</h1>
                <a href="./coverage/index.html" class="report-link">
                    ðŸ“Š View Coverage Report
                </a>
                <a href="./mutation/mutation-report.html" class="report-link">
                    ðŸ§¬ View Mutation Report
                </a>
            </div>
        </body>
        </html>
        EOF

    - name: Debug Directory Structure
      run: |
        echo "Content of public directory:"
        ls -R public/

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: \${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        force_orphan: true

permissions:
  contents: write
